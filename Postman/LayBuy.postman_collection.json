{
	"info": {
		"_postman_id": "c6865dcc-61dd-4093-96d7-788b86dd6105",
		"name": "LayBuy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Validate 10 Records are Returned",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();\r",
							"console.log(data)\r",
							"pm.test('Number of records = ' + data.length, function () {\r",
							"    pm.expect(data.length).to.equal(10);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Assert Call response with Success code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"var data = pm.response.json();\r",
							"console.log(data)\r",
							"pm.test('Number of records = ' + data.length, function () {\r",
							"    pm.expect(data.length).to.equal(10);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Validate Single data",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"id\", 3);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate Status Code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"iddata = pm.collectionVariables.get(\"id\");\r",
							"console.log(iddata)\r",
							"\r",
							"pm.test(\"Validate Single Data\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(iddata);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/{{id}}",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Contains User in the list",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"pm.collectionVariables.set(\"Name\", \"Mrs. Dennis Schulist\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.variables.get(\"Name\");\r",
							"\r",
							"pm.test(\"Test Contains Mentioned string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Username\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						""
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "Name",
			"value": ""
		},
		{
			"key": "id",
			"value": ""
		}
	]
}